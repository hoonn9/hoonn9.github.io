<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>NodeJS on HOONS_DEV BLOG</title>
    <link>https://hoonn9.github.io/categories/nodejs/</link>
    <description>Recent content in NodeJS on HOONS_DEV BLOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>kr-ko</language>
    <lastBuildDate>Tue, 11 Jan 2022 20:56:29 +0900</lastBuildDate><atom:link href="https://hoonn9.github.io/categories/nodejs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[NestJS] Graphql File Upload</title>
      <link>https://hoonn9.github.io/nodejs/nestjs/nestjs-graphql-file-upload/</link>
      <pubDate>Tue, 11 Jan 2022 20:56:29 +0900</pubDate>
      
      <guid>https://hoonn9.github.io/nodejs/nestjs/nestjs-graphql-file-upload/</guid>
      <description>graphql (apollo client)를 사용하는 프론트에서 파일 업로드 구현 중에 REST를 사용하지 않고 오직 Graphql로 파일 업로드를 해보고 싶다고 생각이 들었다. 작업 중이던 NestJS에 적용하다가 삽질했던거 공유해본다.
패키지 설치 NestJS npm install graphql-upload
React npm install apollo-upload-client
npm i -D @types/apollo-upload-client
apollo-upload-client mutation의 content-type을 json에서 multipart로 변환 및 operation, variables을 formData에 주입 해준다.
apollo client의 기존 httpLink를 createUploadLink하여 uploadLink로 대체해주는 것 만으로 적용 가능하다.
import { createUploadLink } from &amp;#34;apollo-upload-client&amp;#34;; const httpLink = createUploadLink({ uri: GRAPHQL_URL, credentials: &amp;#34;include&amp;#34;, }); const errorLink = onError(({ graphQLErrors, networkError }) =&amp;gt; { // .</description>
    </item>
    
  </channel>
</rss>
